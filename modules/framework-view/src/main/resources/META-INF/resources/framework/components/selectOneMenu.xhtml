<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2013, Rogue.IO
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:composite="http://xmlns.jcp.org/jsf/composite"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">
    <composite:interface name="selectOneMenu" displayName="[Form Component] Select One Menu">
        <composite:attribute name="label" required="true"/>
        <composite:attribute name="value" required="true"/>
        <composite:attribute name="options" required="true"/>
        <composite:attribute name="customOptionsRendering" type="boolean"/>
        <composite:attribute name="noSelectionOption" type="boolean"/>
        <composite:attribute name="noSelectionMessage"/>
        <composite:attribute name="required" type="boolean"/>
        <composite:attribute name="requiredMessage"/>
        <composite:attribute name="immediate" default="false" type="boolean"/>
        <composite:attribute name="editable" required="true" type="boolean"/>
        <composite:attribute name="helpText" required="false"/>
        <composite:editableValueHolder name="value" targets="#{cc.clientId}:selectOptions"/>
        <composite:attribute name="converter" required="false" targets="#{cc.clientId}:selectOptions"/>
        <composite:attribute name="validator" targets="#{cc.clientId}:selectOptions"
                             method-signature="void validate(javax.faces.context.FacesContext,javax.faces.component.UIComponent,java.lang.Object)"/>
        <composite:attribute name="validatorMessage"/>

    </composite:interface>
    <composite:implementation>
        <div class="form-group" id="#{cc.clientId}">
            <h:outputLabel styleClass="col-md-2 control-label" for="selectOptions" value="#{cc.attrs.label}"/>

            <div class="col-md-10">
                <h:selectOneMenu id="selectOptions" value="#{cc.attrs.value}" styleClass="form-control"
                                 converter="#{cc.attrs.converter}" immediate="#{cc.attrs.immediate}"
                                 disabled="#{!cc.attrs.editable}"
                                 required="#{cc.attrs.required}" requiredMessage="#{cc.attrs.requiredMessage}">
                    <c:if test="#{cc.attrs.noSelectionOption}">
                        <f:selectItem noSelectionOption="true"
                                      itemLabel="#{cc.attrs.noSelectionMessage != null ? cc.attrs.noSelectionMessage : 'None'}"/>
                    </c:if>
                    <c:if test="#{cc.attrs.customOptionsRendering}">
                        <composite:insertChildren/>
                    </c:if>
                    <c:if test="#{!cc.attrs.customOptionsRendering}">
                        <f:selectItems value="#{cc.attrs.options}" var="item" itemLabel="#{item}"
                                       itemValue="#{item}"/>
                    </c:if>
                </h:selectOneMenu>

                <h:panelGroup class="help-block" rendered="#{!(empty cc.attrs.helpText) and cc.attrs.editable}">
                    #{cc.attrs.helpText}
                </h:panelGroup>

                <div class="alert alert-danger" style="padding:0px 35px; border:none;">
                    <h:message for="#{cc.clientId}:selectOptions"/>
                </div>
            </div>
        </div>
    </composite:implementation>
</ui:composition>
